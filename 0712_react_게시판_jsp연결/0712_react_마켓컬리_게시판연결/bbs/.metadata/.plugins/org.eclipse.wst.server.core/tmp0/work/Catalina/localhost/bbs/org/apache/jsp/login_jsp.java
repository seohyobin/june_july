/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-07-12 04:55:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("*{margin: 0; padding: 0; vertical-align: middle; box-sizing: border-box;}\r\n");
      out.write("\r\n");
      out.write("		ul {list-style:none;}\r\n");
      out.write("		a {color:#333;text-decoration:none;}\r\n");
      out.write("#login{width: 100%;padding: 80px 0 80px 0;}\r\n");
      out.write("#login .container{ width: 100%; max-width: 500px; margin: 0 auto; background-color: #f0f0f0; padding: 100px 20px;}\r\n");
      out.write("#login .container .title{padding: 0 0 50px 0 ; text-align: center;}\r\n");
      out.write("#login .container .title h2{ font-size:40px;}\r\n");
      out.write("#login .container .content{width: 100%;}\r\n");
      out.write("#login .container .content form{width: 100%;}\r\n");
      out.write("#login .container .content form ul{width: 100%; list-style: none}\r\n");
      out.write("#login .container .content form ul li{width: 100%; padding: 8px 0}\r\n");
      out.write("#login .container .content form ul li input{width: 100%; height: 60px; padding: 0 0 0 15px; font-size: 16px;}\r\n");
      out.write("#login .container .content .btn-box{text-align: right;}\r\n");
      out.write("#login .container .content .btn-box button{width: 200px; height: 50px; font-size: 15px;}\r\n");
      out.write("\r\n");
      out.write("	.container1{display:flex; align-items: center; max-width: 1200px; margin: 0 auto; justify-content: space-between; padding: 0 0 20px 0;}\r\n");
      out.write("	.left{display:flex;align-items: center; }\r\n");
      out.write("	h2{font-size: 50px; padding: 0 15px 0 0; font-weight: 600; }\r\n");
      out.write("	textarea {resize: none;}\r\n");
      out.write("	a{padding: 0 15px 0 0; font-size: 16px; font-weight: 500; color: #000;}\r\n");
      out.write("	a:link{text-decoration: none;}\r\n");
      out.write("	a:visited{text-decoration:none;}\r\n");
      out.write("	a:focus{text-decoration: none;}\r\n");
      out.write("	a:hover{text-decoration: none;}\r\n");
      out.write("	\r\n");
      out.write("	#header{width: 100%; height: 80px; background: #f0f0f0;}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("		\r\n");
      out.write("	");
 
		//로그인정보=> 세션가져오기
		String userId=null;
		if((String)session.getAttribute("userId")!=null){
			userId =(String)session.getAttribute("userId");
		}
		
	
      out.write("\r\n");
      out.write("	<header id='header'>\r\n");
      out.write("		<div class=\"container1\" >\r\n");
      out.write("			<div class=\"left\">\r\n");
      out.write("				<h2>○.○</h2>\r\n");
      out.write("					<a href=\"./admin.jsp\">\r\n");
      out.write("						HOME\r\n");
      out.write("					</a>\r\n");
      out.write("					<a href=\"./bbsListAction.jsp\">\r\n");
      out.write("					BOARD\r\n");
      out.write("					</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"right\">\r\n");
      out.write("				");
 
				if(userId==null){	
				
      out.write("\r\n");
      out.write("				<a href=\"./signup.jsp\">\r\n");
      out.write("					SIGNUP\r\n");
      out.write("				</a>\r\n");
      out.write("				<a href=\"./login.jsp\">\r\n");
      out.write("					LOGIN\r\n");
      out.write("				</a>\r\n");
      out.write("				");
 
					}
				else{
				
      out.write("\r\n");
      out.write("				<a href=\"./logoutAction.jsp\">\r\n");
      out.write("					LOGOUT\r\n");
      out.write("				</a>\r\n");
      out.write("				");
 	
				}
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("<div id=\"login\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"title\">\r\n");
      out.write("			<h2>♡로그인♡</h2>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"content\">\r\n");
      out.write("			<form action=\"./loginAction.jsp\" method=\"post\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li><input maxlength=\"16\" type=\"text\" name=\"userId\" id=\"userId\" placeholder=\"아이디를 입력하세요\"></li>\r\n");
      out.write("				<li><input maxlength=\"16\" type=\"text\" name=\"userPw\" id=\"userPw\" placeholder=\"비밀번호를 입력하세요\"></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			<div class=\"search-box\">\r\n");
      out.write("				<a href=\"./idSearchForm.jsp\">아이디찾기</a><i>|</i>\r\n");
      out.write("				<a href=\"./pwSearchForm.jsp\">비밀번호찾기</a>\r\n");
      out.write("			</div>\r\n");
      out.write("				<div class=\"btn-box\">\r\n");
      out.write("					<button type=\"submit\">전송</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
